/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as authenticatedLayoutSettingsImport } from './routes/(authenticated)/_layout-settings'
import { Route as authenticatedLayout2Import } from './routes/(authenticated)/_layout-2'
import { Route as authenticatedLayout2IndexImport } from './routes/(authenticated)/_layout-2/index'
import { Route as authenticatedLayoutSettingsSettingsIndexImport } from './routes/(authenticated)/_layout-settings/settings/index'
import { Route as authenticatedLayoutSettingsSettingsSocialAccountsImport } from './routes/(authenticated)/_layout-settings/settings/social-accounts'
import { Route as authenticatedLayoutSettingsSettingsProfileImport } from './routes/(authenticated)/_layout-settings/settings/profile'
import { Route as authenticatedLayoutSettingsSettingsGeneralImport } from './routes/(authenticated)/_layout-settings/settings/general'
import { Route as authenticatedLayoutSettingsSettingsApperanceImport } from './routes/(authenticated)/_layout-settings/settings/apperance'

// Create Virtual Routes

const authenticatedImport = createFileRoute('/(authenticated)')()

// Create/Update Routes

const authenticatedRoute = authenticatedImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedLayoutSettingsRoute =
  authenticatedLayoutSettingsImport.update({
    id: '/_layout-settings',
    getParentRoute: () => authenticatedRoute,
  } as any)

const authenticatedLayout2Route = authenticatedLayout2Import.update({
  id: '/_layout-2',
  getParentRoute: () => authenticatedRoute,
} as any)

const authenticatedLayout2IndexRoute = authenticatedLayout2IndexImport.update({
  path: '/',
  getParentRoute: () => authenticatedLayout2Route,
} as any)

const authenticatedLayoutSettingsSettingsIndexRoute =
  authenticatedLayoutSettingsSettingsIndexImport.update({
    path: '/settings/',
    getParentRoute: () => authenticatedLayoutSettingsRoute,
  } as any)

const authenticatedLayoutSettingsSettingsSocialAccountsRoute =
  authenticatedLayoutSettingsSettingsSocialAccountsImport.update({
    path: '/settings/social-accounts',
    getParentRoute: () => authenticatedLayoutSettingsRoute,
  } as any)

const authenticatedLayoutSettingsSettingsProfileRoute =
  authenticatedLayoutSettingsSettingsProfileImport.update({
    path: '/settings/profile',
    getParentRoute: () => authenticatedLayoutSettingsRoute,
  } as any)

const authenticatedLayoutSettingsSettingsGeneralRoute =
  authenticatedLayoutSettingsSettingsGeneralImport.update({
    path: '/settings/general',
    getParentRoute: () => authenticatedLayoutSettingsRoute,
  } as any)

const authenticatedLayoutSettingsSettingsApperanceRoute =
  authenticatedLayoutSettingsSettingsApperanceImport.update({
    path: '/settings/apperance',
    getParentRoute: () => authenticatedLayoutSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(authenticated)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/_layout-2': {
      id: '/_layout-2'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedLayout2Import
      parentRoute: typeof authenticatedRoute
    }
    '/(authenticated)/_layout-settings': {
      id: '/_layout-settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticatedLayoutSettingsImport
      parentRoute: typeof authenticatedImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/_layout-2/': {
      id: '/_layout-2/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedLayout2IndexImport
      parentRoute: typeof authenticatedLayout2Import
    }
    '/(authenticated)/_layout-settings/settings/apperance': {
      id: '/_layout-settings/settings/apperance'
      path: '/settings/apperance'
      fullPath: '/settings/apperance'
      preLoaderRoute: typeof authenticatedLayoutSettingsSettingsApperanceImport
      parentRoute: typeof authenticatedLayoutSettingsImport
    }
    '/(authenticated)/_layout-settings/settings/general': {
      id: '/_layout-settings/settings/general'
      path: '/settings/general'
      fullPath: '/settings/general'
      preLoaderRoute: typeof authenticatedLayoutSettingsSettingsGeneralImport
      parentRoute: typeof authenticatedLayoutSettingsImport
    }
    '/(authenticated)/_layout-settings/settings/profile': {
      id: '/_layout-settings/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof authenticatedLayoutSettingsSettingsProfileImport
      parentRoute: typeof authenticatedLayoutSettingsImport
    }
    '/(authenticated)/_layout-settings/settings/social-accounts': {
      id: '/_layout-settings/settings/social-accounts'
      path: '/settings/social-accounts'
      fullPath: '/settings/social-accounts'
      preLoaderRoute: typeof authenticatedLayoutSettingsSettingsSocialAccountsImport
      parentRoute: typeof authenticatedLayoutSettingsImport
    }
    '/(authenticated)/_layout-settings/settings/': {
      id: '/_layout-settings/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof authenticatedLayoutSettingsSettingsIndexImport
      parentRoute: typeof authenticatedLayoutSettingsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  authenticatedRoute: authenticatedRoute.addChildren({
    authenticatedLayout2Route: authenticatedLayout2Route.addChildren({
      authenticatedLayout2IndexRoute,
    }),
    authenticatedLayoutSettingsRoute:
      authenticatedLayoutSettingsRoute.addChildren({
        authenticatedLayoutSettingsSettingsApperanceRoute,
        authenticatedLayoutSettingsSettingsGeneralRoute,
        authenticatedLayoutSettingsSettingsProfileRoute,
        authenticatedLayoutSettingsSettingsSocialAccountsRoute,
        authenticatedLayoutSettingsSettingsIndexRoute,
      }),
  }),
  AuthRegisterRoute,
  AuthIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/register",
        "/auth/"
      ]
    },
    "/": {
      "filePath": "(authenticated)",
      "children": [
        "/_layout-2",
        "/_layout-settings"
      ]
    },
    "/_layout-2": {
      "filePath": "(authenticated)/_layout-2.tsx",
      "parent": "/",
      "children": [
        "/_layout-2/"
      ]
    },
    "/_layout-settings": {
      "filePath": "(authenticated)/_layout-settings.tsx",
      "parent": "/",
      "children": [
        "/_layout-settings/settings/apperance",
        "/_layout-settings/settings/general",
        "/_layout-settings/settings/profile",
        "/_layout-settings/settings/social-accounts",
        "/_layout-settings/settings/"
      ]
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/_layout-2/": {
      "filePath": "(authenticated)/_layout-2/index.tsx",
      "parent": "/_layout-2"
    },
    "/_layout-settings/settings/apperance": {
      "filePath": "(authenticated)/_layout-settings/settings/apperance.tsx",
      "parent": "/_layout-settings"
    },
    "/_layout-settings/settings/general": {
      "filePath": "(authenticated)/_layout-settings/settings/general.tsx",
      "parent": "/_layout-settings"
    },
    "/_layout-settings/settings/profile": {
      "filePath": "(authenticated)/_layout-settings/settings/profile.tsx",
      "parent": "/_layout-settings"
    },
    "/_layout-settings/settings/social-accounts": {
      "filePath": "(authenticated)/_layout-settings/settings/social-accounts.tsx",
      "parent": "/_layout-settings"
    },
    "/_layout-settings/settings/": {
      "filePath": "(authenticated)/_layout-settings/settings/index.tsx",
      "parent": "/_layout-settings"
    }
  }
}
ROUTE_MANIFEST_END */
